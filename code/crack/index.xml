<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iOS逆向 on 细胞的作战实验室</title>
    <link>http://azen.me/code/crack/</link>
    <description>Recent content in iOS逆向 on 细胞的作战实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://azen.me/code/crack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>逆向记录：墨墨</title>
      <link>http://azen.me/code/crack/ios-crack-xiii/</link>
      <pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-xiii/</guid>
      <description>&amp;nbsp;
问题免费的单词数量有上限，超过需要付费。
嗯！只要能把这个付费功能干掉，从明天起一定好好背单词...
开始猜想每次添加新单词，或者更改最大单词数的时候，墨墨会从服务端拉当前用户最大单词数的数据。
之后，存到某个单例里面，然后持久化到本地（证据：断网依然有最大单词限制，添加新单词依然提示购买）
思路先从VC的方法中找线索，没有的话，尝试找找有木有xxxManager之类的类
开始收集信息3524 ?? 0:02.20 /var/containers/Bundle/Application/4FC3FD5F-AF17-41C2-8279-C65437176F14/momo_ios.app/momo_ios</description>
    </item>
    
    <item>
      <title>7逆向 - 动态调试</title>
      <link>http://azen.me/code/crack/ios-crack-xii/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-xii/</guid>
      <description>&amp;nbsp;
概念→ 把程序运行起来，通过打断点、打印等方式，查看参数、返回值、函数的调用流程
→ 可以进入函数，一步一步的看看函数的调用是什么样的
→ 逆向的过程中也经常要这么干..
→ 比如，我们已经知道抢红包的方法是哪个方法了，那最好可以在那个方法里打一个断点，调试下参数、函数之间的调用关系等
调试原理Xcode的调试器：LLDB</description>
    </item>
    
    <item>
      <title>6Tweak - 批量hook函数添加log - logify.pl</title>
      <link>http://azen.me/code/crack/ios-crack-xi/</link>
      <pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-xi/</guid>
      <description>&amp;nbsp;
希望追踪用户点击某个按钮之后的调用逻辑
如：微信点击红包之后，进行抢红包，想知道点击之后和哪个方法有关？
小例子希望找到微信点击红包之后，进行了哪些操作
猜测应该是调用了当前VC的某个方法，实现了抢红包操作的
首先找到所在VCClass-dump出来头文件找到我们找的头文件BaseMsgControllerViewController
但是方法很多，我们怎么知道需要调用的是哪个方法呢？
找到我们需要的相关方法方案一：Hook所有方法把它所有的方法都hook一遍，打印一下，就可以追踪每一个方法了。观察分析控制台的log，就知道了。
问题：麻烦！:如果需要打印参数更麻烦: 如果函数有返回值，还希望打印下返回值...</description>
    </item>
    
    <item>
      <title>5Tweak - 可用的辅助小语法(Logos语法)</title>
      <link>http://azen.me/code/crack/ios-crack-x/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-x/</guid>
      <description>&amp;nbsp;
Weak里%有关的语法
%ctor &amp;amp; %dtorctor：加载动态库的时候调用，做初始化操作
dtor：收尾的操作
%new在方法前加 %new，说明是一个新定义的方法
如果这样写了make package的时候还是找不到，可以用@interface .</description>
    </item>
    
    <item>
      <title>4Tweak - 多文件开发</title>
      <link>http://azen.me/code/crack/ios-crack-ix/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-ix/</guid>
      <description>&amp;nbsp;
文件类型实际上，用.m文件也可以
多文件开发举例使用OC文件的使用举例
1.直接importOC文件 - 如果有文件夹需要写明文件夹 &amp;quot;Model/MJPerson.h&amp;quot;
2.变更了Tweak.xm的文件层级嘛(放到src下了)，需要更新下Makefile文件的配置说明
3.告诉theo 我们自定义的.m文件也要参与编译</description>
    </item>
    
    <item>
      <title>3Teak - 原理</title>
      <link>http://azen.me/code/crack/ios-crack-viii/</link>
      <pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-viii/</guid>
      <description>&amp;nbsp;
基本流程编写代码make编译 theos中出现了一个动态库，说明make操作，把编写的代码生成了一个动态库。
make package把动态库打包成了一个deb文件
make package：这个指令，是包含了make中的「编译」功能的，所以以后不用make，直接make package就好
make install远程登录手机(根据环境变量)传递deb包数据Cydia安装deb包Cydia把里面的动态库拿出来plist文件：里面存了靶App的Bundle ID 放到这里这个东东提供了安装机制影响靶App点击靶App的时候，Cydia Substrate会看文件夹下的plist文件写的bundle ID，一旦发现bundle ID匹配，就会把动态库载入内存，对靶App的内存代码(二进制代码)进行修改。</description>
    </item>
    
    <item>
      <title>2Tweak - 很小的小练习</title>
      <link>http://azen.me/code/crack/ios-crack-vii/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-vii/</guid>
      <description>&amp;nbsp;
去掉SpringBoard的未读数字思路编写一个Tweak给桌面用桌面应用：SpringBoard路径：System/Library/CoreServices/SpringBoard.app找到Mach-O文件验证是否加壳 otool -l SpringBoard | grep cryptMachOView查看是否加密class-dump出头文件希望查看下通知个数这个UI控件在哪里..但是没有办法用Reveal查通过Cycript查看控件在哪使用Cycript寻找待修元素在哪里查看根控制器的子控制器找根控制器的Subviews - 希望找到小红点UI问题：查到的东西过多</description>
    </item>
    
    <item>
      <title>1TweakStartUp - 喜马拉雅FM去广告</title>
      <link>http://azen.me/code/crack/ios-crack-vi/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-vi/</guid>
      <description>&amp;nbsp;
思路Reveal查看广告控件处理方案一：用cycript把这个控件干掉问题：不彻底，只是在内存中干掉了方案二：把这个View的init方法的实现hook掉，直接return nil;通过class-dump找到这个View的头文件hook的简单实现Theos工具作用：实现比较简单的hook操作
使用原理编写的hook代码 → deb插件 → 安装到手机上 → 修改宿主函数</description>
    </item>
    
    <item>
      <title>5逆向 - 脱壳(Qiao)</title>
      <link>http://azen.me/code/crack/ios-crack-v/</link>
      <pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-v/</guid>
      <description>&amp;nbsp;
e问题：要分析一个安装到手机上的应用，需要找到手机上的ipa包
找到iPhone上的安装包ps -A 枚举所有手机上的进程此处就是安装包的位置把安装包拿到macclass-dump、Hopper的时候，无法对改ipa包进行解析说明ipa被加密了加壳开发完一个app之后，打包成了ipa文件 → 上传到App Store(app store对ipa进行加壳操作 - 加密)</description>
    </item>
    
    <item>
      <title>4逆向 - Mach-O</title>
      <link>http://azen.me/code/crack/ios-crack-iv/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-iv/</guid>
      <description>&amp;nbsp;
App从开发到安装到手机的过程开发完毕 → 编译、链接、签名 → .app包
app包的内容
图片、bundle、nib、Mach-O文件(写的代码编译成了这个文件，就是iOS的可执行文件)
→ 压缩(改后缀，变成ipa文件)</description>
    </item>
    
    <item>
      <title>3逆向 - Reveal</title>
      <link>http://azen.me/code/crack/ios-crack-iii/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-iii/</guid>
      <description>&amp;nbsp;
下载：https://revealapp.com/download/
Crack版：https://juejin.im/post/5a31cdabf265da43133d276b
这个东东只能识别UI结构，可以结合Cycript分析控制器结构
&amp;nbsp;</description>
    </item>
    
    <item>
      <title>2逆向 - Cycript</title>
      <link>http://azen.me/code/crack/ios-crack-ii/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-ii/</guid>
      <description>&amp;nbsp;
想知道当前运行的App的布局、实例方法、都是啥
想动态给当前App增加一些羞羞的东东？
...
嗯呐，就是这一节，你来对了！
概述文档：Cycript
是Objective-C++、ES6、Java等语法的混合物
用途：探索、修改、调试正在运行的mac/iOS App
安装：Cydia安装</description>
    </item>
    
    <item>
      <title>1逆向 - 环境准备</title>
      <link>http://azen.me/code/crack/ios-crack-i/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/crack/ios-crack-i/</guid>
      <description>&amp;nbsp;
Cydia越狱之后的苹果商店
作者：Jay Freeman - 免费版周杰伦...(阿婆主ID: saurik)
上一张照片膜拜下...越狱开发的领袖人物
Cydia上软件的作者是他的，都可以放心食用~
Cydia安装东西一般是用来安装插件和主题的，安装的软件格式是deb格式</description>
    </item>
    
  </channel>
</rss>