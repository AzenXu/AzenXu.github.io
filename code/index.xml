<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>细胞的作战实验室</title>
    <link>http://azen.me/code/</link>
    <description>Recent content on 细胞的作战实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://azen.me/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>区块链基础 &amp;amp; 公链原理</title>
      <link>http://azen.me/code/block-chain-i/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/block-chain-i/</guid>
      <description>&amp;nbsp;
0x0 区块链相关概念法币：日常生活中用到的纸币
去中心化：比特币不需要中间机构做货币的发行工作 - 货币是被「发现」的，而不是「发明」的。需要注意的是，并不是所有的区块链项目都是去中心化的
挖矿：「结点A」希望给「结点B」转钱，需要「矿工」帮A把钱「搬运」过去
这种搬运的行为就是「挖矿」挖矿的平均时长：10分钟（转钱不是实时到账的）广播：矿工除了能「挖矿」，还可以「广播」 - 每挖成功一次矿，就会给所有结「广播」一次</description>
    </item>
    
    <item>
      <title>Golang与密码学</title>
      <link>http://azen.me/code/golang-and-security/</link>
      <pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/golang-and-security/</guid>
      <description>&amp;nbsp;
0x0 概述这篇文档主要聊聊三种加密方式与Golang实现
哈希加密对称加密非对称加密0x1 哈希加密哈希算法我们知道，查找中，有「哈希查找」，是一种比「顺序查找」更快的查找方法。
「哈希查找」的关键点，就是实现一种「哈希算法」，使得每个任意key，经过哈希算法计算后，可以获得一个定长的散列值。
相同key经过相同哈希算法散列之后，获得相同的散列值不同key经过相同哈西算法散列之后，获得不同的散列值特点：
可以把任意长度的「明文」，散列成固定长度的「指纹」正向计算简单快速，逆向推算困难，基本不可能逆推出明文明文有一点点变化，密文就会改变优秀的散列算法需要尽量避免两个不同的明文，加密出来是相同的指纹发展：
 取模操作 → 异或运算→ 位移操作</description>
    </item>
    
    <item>
      <title>Linux定时任务</title>
      <link>http://azen.me/code/linux-timer/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/linux-timer/</guid>
      <description>&amp;nbsp;
参考资料：鸟哥的linux私房菜
Linux 排程就是透過 crontab 與 at 這兩個東西
at 和 crontabat：处理只发生一次的事件</description>
    </item>
    
    <item>
      <title>Go 语言狂人许式伟：编程的意义就是让世界变得有趣一些</title>
      <link>http://azen.me/code/qiniu-xushiwei/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/qiniu-xushiwei/</guid>
      <description>&amp;nbsp;
从小孩的教育到世界观当小孩长大以后，未来十年二十年的时候整个社会是什么样子的？
只有明白了那个时候的世界是什么样的，才能想象教会小孩什么东东可以让他适应那个时候的世界——这个和做企业是一样的
不要因为别人的言论而认为世界是什么样的，应该有自己的世界观
职业生涯工作六年以后，有困惑：为什么我们做的wps不赚钱呢？做什么业务才是符合互联网时代的？商业上才能成功的？07年坚决转型产品经理，只有PM才能在商业上探讨产品成功的可能性。07思考：移动互联网的大趋势下，什么东西会变化？发现：似乎还没有移动互联网下的存储公司创建七牛七牛的使命：释放社会的创造力。
解释：你有没有在做一个新的，以前人没有试过的探索。这件事是勇敢的、值的鼓励的。你起码试了，别人连试都不敢试。云计算可以降低试错成本，让你可以一个月、一周就能判断你的尝试是不是一个靠谱的事情。
几个观点如果把人看成一个投资人的话，投资企业和思考小孩的教育有共同点：你要思考未来。写代码不习惯单步调试：人需要在把自己逼到资源相对匮乏下，才能更有效的突破（这个观点和辉哥的观点相同，想要高效学习，需要认为制造时间上的稀缺性）编程的意义在于，让你真正能够创造一个世界，或者说改变一个世界。人的意义在于自我实现，自己追求的是什么，就去实现什么。所以，要让这个世界变的更有趣一些。视频内容&amp;lt;iframe src=&#34;//player.bilibili.com/player.html?aid=12069987&amp;amp;cid=19912250&amp;amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;</description>
    </item>
    
    <item>
      <title>【Git技巧】为Git创建一个孤立分支</title>
      <link>http://azen.me/code/git-branch/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://azen.me/code/git-branch/</guid>
      <description>&amp;nbsp;
问题描述有时候我们需要在GIT里面创建一个空分支，该分支不继承任何提交，没有父节点，完全是一个干净的分支，例如我们需要在某个分支里存放项目文档。
使用传统的git checkout命令创建的分支是有父节点的，意味着新branch包含了历史提交，所以我们无法直接使用该命令。
可视化效果【Git技巧】为Git创建一个孤立分支  image2018-4-19_14-27-9.png&#34; data-location=&#34;Azen  【Git技巧】为Git创建一个孤立分支  image2018-4-19_14-27-9.</description>
    </item>
    
  </channel>
</rss>